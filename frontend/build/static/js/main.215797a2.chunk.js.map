{"version":3,"sources":["SidebarChat.js","Sidebar.js","axios.js","Chat.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarChat","className","Avatar","sidebar","src","IconButton","SearchOutlined","placeholder","type","instance","axios","create","baseURL","Chat","message","useState","input","setInput","sendMessage","e","a","preventDefault","post","name","timestamp","received","AttachFile","map","messageOne","InsertEmoticon","value","onChange","target","onClick","SendOutlined","Mic","App","setMessage","useEffect","get","then","response","data","channel","Pusher","cluster","subscribe","bind","newMessage","unbind_all","unsubscribe","Sidebar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.215797a2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./sidebarChat.css\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\n\r\nconst SidebarChat = () => {\r\n  return (\r\n    <div className=\"sidebarChat\">\r\n      <Avatar />\r\n      <div className=\"sidebarChat_info\">\r\n        <h2>Room name</h2>\r\n        <p>This the last message</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarChat;\r\n","import React from \"react\";\r\nimport \"./sidebar.css\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { SearchOutlined } from \"@material-ui/icons\";\r\nimport SidebarChat from \"./SidebarChat\";\r\n\r\n\r\nconst sidebar = () => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar_header\">\r\n        <Avatar src=\"https://avatars3.githubusercontent.com/u/54771222?s=460&u=4feb04428f8660b7d9360847ea1c54608047ddee&v=4\" />\r\n        <div className=\"sidebar_headerRight\">\r\n          <IconButton>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ChatIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar_search\">\r\n        <div className=\"sidebar_searchContainer\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <input placeholder=\"Search or start new chat\" type=\"text\"></input>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar_chats\">\r\n        <SidebarChat />\r\n        <SidebarChat />\r\n        <SidebarChat />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default sidebar;\r\n","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:5000\"\r\n})\r\n\r\nexport default instance","import React, { useState } from \"react\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport \"./chat.css\";\r\nimport {\r\n  AttachFile,\r\n  InsertEmoticon,\r\n  Mic,\r\n  MoreVert,\r\n  SearchOutlined,\r\n  SendOutlined,\r\n} from \"@material-ui/icons\";\r\nimport axios from \"./axios\";\r\n\r\nfunction Chat({ message }) {\r\n  const [input, setInput] = useState(\"\");\r\n  const sendMessage = async(e) => {\r\n    e.preventDefault();\r\n\r\n    axios.post(\"/message/new\", {\r\n      message: input,\r\n      name: \"Rupam\",\r\n      timestamp: \"Just now\",\r\n      received: true,\r\n    });\r\n\r\n    setInput(\"\")\r\n  };\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat_header\">\r\n        <Avatar />\r\n        <div className=\"chat_headerInfo\">\r\n          <h3>Room name</h3>\r\n          <p>Last seen at...</p>\r\n        </div>\r\n        <div className=\"chat_headerRight\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"chat_body\">\r\n        {message.map((messageOne) => (\r\n          <p\r\n            className={`chat_message ${messageOne.received && \"chat_reciever\"}`}\r\n          >\r\n            <span className=\"chat_name\">{messageOne.name}</span>\r\n            {messageOne.message}\r\n            <span className=\"chat_timestamp\">{messageOne.timestamp}</span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat_footer\">\r\n        <InsertEmoticon />\r\n        <form>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type a message\"\r\n            type=\"text\"\r\n          ></input>\r\n          <button type=\"submit\" onClick={sendMessage}>\r\n            <IconButton>\r\n              <SendOutlined />\r\n            </IconButton>\r\n          </button>\r\n        </form>\r\n        <Mic />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport Pusher from \"pusher-js\"\nimport axios from \"./axios\"\n\nfunction App() {\n  const [message, setMessage] = useState([])\n\n  useEffect(() => {\n    axios.get(\"/message/sync\")\n    .then((response) => {\n      setMessage(response.data)\n    })\n  }, [])\n\n  useEffect(() => {\n    var pusher = new Pusher('3bfbe37053899c3f31cf', {\n      cluster: 'ap2'\n    });\n\n    var channel = pusher.subscribe('message');\n    channel.bind('inserted', function(newMessage) {\n      // alert(JSON.stringify(newMessage));\n      setMessage([...message, newMessage])\n    });\n\n    return () => {\n      channel.unbind_all()\n      channel.unsubscribe()\n    }\n  }, [message])\n\n  \n  return (\n    <div className=\"app\">\n      <div className=\"app_body\">\n        <Sidebar />\n        <Chat message={message}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}